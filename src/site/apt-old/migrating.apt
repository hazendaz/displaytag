~~
~~ Copyright (C) 2002-2024 Fabrizio Giustina, the Displaytag team
~~
~~ Permission is hereby granted, free of charge, to any person obtaining a copy
~~ of this software and associated documentation files (the "Software"), to deal
~~ in the Software without restriction, including without limitation the rights
~~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
~~ copies of the Software, and to permit persons to whom the Software is
~~ furnished to do so, subject to the following conditions:
~~
~~ The above copyright notice and this permission notice shall be included in
~~ all copies or substantial portions of the Software.
~~
~~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
~~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
~~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
~~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
~~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
~~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
~~ THE SOFTWARE.
~~

                                    ------------------------------
                                              Migrating
                                    ------------------------------
                                          Fabrizio Giustina
                                    ------------------------------
                                              11-11-2005
                                    ------------------------------



Migrating from displaytag 1.0

 Displaytag 1.1 is intended, except for a few areas, a drop-in replacement for displaytag 1.0. This document will only
 list breaking changes or recommendation for the migration of an existing application.

 <Warning: always remove all the java/class files generated by your application server for your jsps when dropping the
 new displaytag jar>


* Java version / application server requirements

  Displaytag 1.1 requires a 1.4 level jre and a servlet container with jsp 1.2 support. Displaytag 1.0 had jre 1.3 and
  jsp 1.1 support, so be sure to check your environment.


* Updated dependencies

  Some of the core dependencies have been updated from displaytag 1.0. Be sure to update jars in WEB-INF/lib, together
  with the displaytag jars, or you will start seeing errors while using the library.
  The {{{displaytag/dependencies.html}dependencies}} document lists all the required jars. Also note that displaytag 1.1
  is built using maven 2 so you can fully take advantage of its dependency management mechanism.


* Deprecated features removed

   This is a list of functionalities deprecated in displaytag 1.0 which
   have been removed in following versions.

     * The <<<org.apache.taglibs.display package>>> (used in version 0.8.x) has been removed.
       Only use classes in the org.displaytag and children package.

     * Deprecated presentational html attributes in table and column tag have been removed.
       Use the style or class attributes to add formatting using css.

     * The deprecated <<<styleClass>>> and <<<headerStyleClass>>> attributes have been removed,
       use the <<<class>>> and <<<headerClass>>> attributes.

     * The deprecated <<<DisplayPropertiesLoaderServlet>>> has been removed. The recommended way
       to load custom properties is adding a <<<displaytag.properties>>> file to your classpath.


* API changes

   * The <<<org.displaytag.decorator.ColumnDecorator>>> has been deprecated. Old decorators will continue to work, but
   it's suggested to change them to use the new <<<org.displaytag.decorator.DisplaytagColumnDecorator>>> interface in
   order to fully take advantage of new features in 1.1. (tip: also check the new <<<format>>> attribute, which could
   save you some time in writing column decorators)

   * The <<<org.displaytag.decorator.TableDecorator>>> base class has been extended and, while it remains source
   compatible with the 1.0 release, it's recommended that you recompile your table decorators to avoid binary
   compatibility problems.












